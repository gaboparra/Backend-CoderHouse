paths:
  /api/carts:
    get:
      summary: Obtener todos los carritos
      description: Obtiene una lista de todos los carritos.
      tags:
        - Carts
      responses:
        "200":
          description: Lista de carritos obtenida exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cart"

  /api/carts/{cid}:
    get:
      summary: Obtener un carrito por ID
      description: Obtiene un carrito específico según su ID.
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito a obtener.
          schema:
            type: string
          example: "610eac65fbc608001f3b20b7"
      responses:
        "200":
          description: Carrito obtenido exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "404":
          description: Carrito no encontrado.

    post:
      summary: Agregar un producto al carrito
      description: Agrega un producto al carrito especificado.
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito al que agregar el producto.
          schema:
            type: string
          example: "610eac65fbc608001f3b20b7"
        - in: path
          name: pid
          required: true
          description: ID del producto a agregar al carrito.
          schema:
            type: string
          example: "610eac65fbc608001f3b20b7"
      responses:
        "200":
          description: Producto agregado al carrito exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "404":
          description: Producto o carrito no encontrado.

    delete:
      summary: Vaciar el carrito
      description: Elimina todos los productos del carrito especificado.
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito a vaciar.
          schema:
            type: string
          example: "610eac65fbc608001f3b20b7"
      responses:
        "200":
          description: Carrito vaciado exitosamente.
        "404":
          description: Carrito no encontrado.

  /api/carts/{cid}/products/{pid}:
    delete:
      summary: Eliminar un producto del carrito
      description: Elimina un producto específico del carrito según su ID.
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito del cual eliminar el producto.
          schema:
            type: string
          example: "610eac65fbc608001f3b20b7"
        - in: path
          name: pid
          required: true
          description: ID del producto a eliminar del carrito.
          schema:
            type: string
          example: "610eac65fbc608001f3b20b7"
      responses:
        "200":
          description: Producto eliminado del carrito exitosamente.
        "404":
          description: Producto o carrito no encontrado.

  /api/carts/{cid}/products/{pid}/amount:
    put:
      summary: Actualizar cantidad de un producto en el carrito
      description: Actualiza la cantidad de un producto específico en el carrito.
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: ID del carrito donde se actualizará la cantidad del producto.
          schema:
            type: string
          example: "610eac65fbc608001f3b20b7"
        - in: path
          name: pid
          required: true
          description: ID del producto cuya cantidad se actualizará en el carrito.
          schema:
            type: string
          example: "610eac65fbc608001f3b20b7"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  description: Nueva cantidad del producto en el carrito.
                  example: 3
      responses:
        "200":
          description: Cantidad de producto en el carrito actualizada exitosamente.
        "404":
          description: Producto o carrito no encontrado.

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: Identificador único del carrito.
          example: "610eac65fbc608001f3b20b7"
        products:
          type: array
          description: Lista de productos en el carrito.
          items:
            type: object
            properties:
              product:
                $ref: "#/components/schemas/Product"
              amount:
                type: integer
                description: Cantidad del producto en el carrito.
                example: 2

    Product:
      type: object
      properties:
        _id:
          type: string
          description: Identificador único del producto.
          example: "610eac65fbc608001f3b20b7"
        title:
          type: string
          description: Título del producto.
          example: "Título"
        description:
          type: string
          description: Descripción del producto.
          example: "Descripción."
        price:
          type: number
          format: float
          description: Precio del producto.
          example: 19.99
        stock:
          type: integer
          description: Cantidad disponible en stock.
          example: 100
        imageUrl:
          type: string
          format: uri
          description: URL de la imagen del producto.
          example: "https://example.com/images/manga.jpg"
